package myByteStream.demo02;

/**
 * @author 李明
 * @date 2021年07月03日 1:02
 */

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

/**
    需求：
        把文件fos.txt中的内容读取出来在控制台输出

    FileInputStream：从文件系统中的文件获取输入字节
        FileInputStream(String name)：通过打开与实际文件的连接来创建一个FileInputStream,该文件由文件系统中的路径名name命名

    使用字节输入流读数据的步骤：
        1:创建字节输入流对象
        2:调用字节输入流对象的读数据方法
        3:释放资源
 */
public class FileInputStreamDemo01 {
    public static void main(String[] args) throws IOException {
        //创建字节输入流对象
        //FileInputStream(String name)
        FileInputStream fis = new FileInputStream("D:\\02-looking for job\\00-Project\\43-LearnJavaSE\\LearnJavaSE\\03-黑马风清扬JavaSE\\02-第二阶段代码手敲\\day08-code\\itcast\\fos.txt");

        //调用字节输入流对象的读数据方法
        //int read()：从该输入流读取一个字节的数据
//        //第一次读取数据
//        int by = fis.read();
//        System.out.println(by);
//        System.out.println((char)by);
//
//        //第二次读取数据
//        by = fis.read();
//        System.out.println(by);
//        System.out.println((char)by);

//        //再多读取2次
//        by = fis.read();
//        System.out.println(by);
//
//        by = fis.read();
//        System.out.println(by);
//        //如果文件中没有数据了，我们采用一次读取一个数据的方式，它的返回值就是-1

        //但是每次只能读一次，这么写太麻烦，所以用循环来进行改进
        //写法1.0
//        int by = fis.read();
//        while(by != -1){
//            System.out .print((char)by);
//            by = fis.read();
//        }

        //优化上面的程序2.0
        int by;
          /**
            fis.read()：读数据
            by=fis.read()：把读取到的数据赋值给by
            by != -1：判断读取到的数据是否是-1
         */
        while((by = fis.read() )!= -1){
            System.out.print((char)by);
        }
        //释放资源
        fis.close();
    }
}
