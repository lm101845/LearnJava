package keyWord03;

/**
 * @姓名 李明
 * @日期 2018年11月5日下午5:34:08
 * 
 *     1、static变量
 * 
 *     按照是否静态的对类成员变量进行分类可分两种：一种是被static修饰的变量，叫静态变量或类变量；
 *     另一种是没有被static修饰的变量，叫实例变量。
 * 
 *     两者的区别是：
 * 
 *     对于静态变量在内存中只有一个拷贝（节省内存），JVM只为静态分配一次内存，在加载类的过程中完成静态变量的内存分配，
 *     可用类名直接访问（方便），当然也可以通过对象来访问（但是这是不推荐的）。
 * 
 *     对于实例变量，没创建一个实例，就会为实例变量分配一次内存，实例变量可以在内存中有多个拷贝，互不影响（灵活）。
 * 
 *     static成员变量的初始化顺序按照定义的顺序进行初始化。static不可以修饰局部变量；
 * 
 *     所以一般在需要实现以下两个功能时使用静态变量：
 * 
 *     在对象之间共享值时 方便访问变量时
 * 
 * 
 *     2、静态方法
 * 
 *     静态方法的好处就是不用生成类的实例就能直接调用，可以这样理解使用static修饰的成员不再归对象所以，而是属于类，
 *     可以理解为是共有的，也就说只要通过类名就可以访问，不需要耗费资源反复创建对象，因为在程序第一次加载的时候就已经在内存中了，
 *     直到程序结束该内存才会释放。如果不是static修饰的成员在使用完之后该内存就会被回收，所以说static要慎用,根据实际情况而定
 * 
 *     如果这个方法是作为一个工具来使用，就声明为static，不用new一个对象出来就可以使用了，比如连接到数据库，我声明一个
 *     getConnection()的方法，就定义为静态的，因为连接到数据库不是某一个对象所特有的。它只作为一个连接到数据库的工具。
 *     至于提高效率的也未必，要看具体的方法的用处，去定义这个方法是不是静态的。
 * 
 *     因为static方法独立于任何实例，因此static方法必须被实现，而不能是抽象的abstract。
 * 
 * 
 * 
 *     3.static修饰类
 * 
 *     一般静态内部类可以用static修饰（java内部类分为四种：常规内部类、静态内部类、局部内部类、匿名内部类）。
 *     只能访问外部类的static成员，不能直接访问外部类的实例变量与实例方法。
 * 
 *     4、static代码块
 * 
 *     static代码块也叫静态代码块，是在类中独立于类成员的static语句块，可以有多个，位置可以随便放，它不在任何的方法体内，
 *     JVM加载类时会执行这些静态的代码块，如果static代码块有多个，JVM将按照它们在类中出现的先后顺序依次执行它们，
 *     每个代码块只会被执行一次，所以说static块可以用来优化程序性能。
 * 
 * 
 * 
 *     static方法块和static方法的区别：
 * 
 *     静态代码块是自动执行的;
 * 
 *     静态方法是被调用的时候才执行的.
 * 
 *     静态方法：如果我们在程序编写的时候需要一个不实例化对象就可以调用的方法，我们就可以使用静态方法，具体实现是在方法前面加
 *     上static，如下：
 * 
 *     public static void method(){}
 * 
 *     在使用静态方法的时候需要注意一下几个方面：
 * 
 *     在静态方法里只能直接调用同类中其他的静态成员（包括变量和方法），而不能直接访问类中的非静态成员。这是因为，
 *     对于非静态的方法和变量，需要先创建类的实例对象后才可使用，而静态方法在使用前不用创建任何对象。
 *     （备注：静态变量是属于整个类的变量而不是属于某个对象的）
 * 
 *     静态方法不能以任何方式引用this和super关键字，因为静态方法在使用前不用创建任何实例对象，当静态方法调用时，
 *     this所引用的对象根本没有产生。
 */
public class TheStatic {

}
