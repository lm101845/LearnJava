package duoTai;

/**
 * @姓名 李明
 * @日期 2018年11月7日下午1:15:00
 * 
 * 多态的分类

已经简单的认识了多态了，那么我们来看一下多态的分类。

多态一般分为两种：重写式多态和重载式多态。重写和重载这两个知识点前面的文章已经详细将结果了，这里就不多说了。

1.重载式多态，也叫编译时多态。也就是说这种多态再编译时已经确定好了。重载大家都知道，方法名相同而参数列表不同的一组方
法就是重载。在调用这种重载的方法时，通过传入不同的参数最后得到不同的结果。

但是这里是有歧义的，有的人觉得不应该把重载也算作多态。因为很多人对多态的理解是：程序中定义的引用变量所指向的具体类型
和通过该引用变量发出的方法调用在编程时并不确定，而是在程序运行期间才确定，这种情况叫做多态。 这个定义中描述的就是我们
的第二种多态―重写式多态。并且，重载式多态并不是面向对象编程特有的，而多态却是面向对象三大特性之一（如果我说的不对
，记得告诉我。。）。

我觉得大家也没有必要在定义上去深究这些，我的理解是：同一个行为具有多个不同表现形式或形态的能力就是多态，
所以我认为重载也是一种多态，如果你不同意这种观点，我也接受。

2.重写式多态，也叫运行时多态。这种多态通过动态绑定（dynamic binding）技术来实现，是指在执行期间判断所引用对象的
实际类型，根据其实际的类型调用其相应的方法。也就是说，只有程序运行起来，你才知道调用的是哪个子类的方法。 
这种多态通过函数的重写以及向上转型来实现，我们上面代码中的例子就是一个完整的重写式多态。我们接下来讲的所有多态都是
重写式多态，因为它才是面向对象编程中真正的多态

动态绑定技术涉及到jvm，暂时不讲（因为我也不懂，哈哈哈哈），感兴趣的可以自己去研究一下，我暂时还没有时间去研究jvm。。

 */
public class DuoTaiFenLei {

}
