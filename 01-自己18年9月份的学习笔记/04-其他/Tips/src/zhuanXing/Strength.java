package zhuanXing;

/**
 * @姓名 李明
 * @日期 2018年11月7日下午1:32:49
 * 
 *     向上转型的好处
 * 
 *     减少重复代码，使代码变得简洁。 提高系统扩展性。
 * 
 *     举个例子：比如我现在有很多种类的动物，要喂它们吃东西。如果不用向上转型，那我需要这样写：
 * 
 *        public void eat(Cat c){
    c.eat();
}

		  public void eat(Dog d){
    d.eat();
}
//......

eat(new Cat());
eat(new Cat());
eat(new Dog());
//......

 * 
 *    一种动物写一个方法，如果我有一万种动物，我就要写一万个方法，写完大概猴年马月都过了好几个了吧。好吧，你很厉害，
 *    你耐着性子写完了，以为可以放松一会了，突然又来了一种新的动物，你是不是又要单独为它写一个eat方法？开心了么？

	那如果我使用向上转型呢？我只需要这样写：
	
	public void eat(Animal a){
    a.eat();
}

eat(new Cat());
eat(new Cat());
eat(new Dog());
//.....
 * 
 * 
 * 恩，搞定了。代码是不是简洁了许多？而且这个时候，如果我又有一种新的动物加进来，我只需要实现它自己的类，让他继承
 * Animal就可以了，而不需要为它单独写一个eat方法。是不是提高了扩展性？
 * 
 */
public class Strength {

}
